{"ast":null,"code":"import _slicedToArray from \"/Users/anna_rgmv/PycharmProjects/basic_flask_app/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/anna_rgmv/PycharmProjects/basic_flask_app/frontend/src/components/MovieForm.js\";\nimport React, { useState } from \"react\";\nimport { Form, Input, FormField, Rating, Button } from \"semantic-ui-react\";\nexport const MovieForm = onNewMovie => {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        title = _useState2[0],\n        setTitle = _useState2[1];\n\n  const _useState3 = useState(1),\n        _useState4 = _slicedToArray(_useState3, 2),\n        rating = _useState4[0],\n        setRating = _useState4[1];\n\n  return React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, React.createElement(FormField, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, React.createElement(Input, {\n    placeholder: \"Movie title\",\n    value: title,\n    onChange: e => setTitle(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  })), React.createElement(FormField, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(Rating, {\n    icon: \"star\",\n    value: rating,\n    maxRating: 5,\n    onRate: (_, data) => {\n      setRating(data.rating);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  })), React.createElement(FormField, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: async () => {\n      const movie = {\n        title,\n        rating\n      };\n      const response = await fetch('/add_movie', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(movie)\n      });\n\n      if (response.ok) {\n        console.log(\"worked\");\n        onNewMovie(movie);\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"submit\")));\n};","map":{"version":3,"sources":["/Users/anna_rgmv/PycharmProjects/basic_flask_app/frontend/src/components/MovieForm.js"],"names":["React","useState","Form","Input","FormField","Rating","Button","MovieForm","onNewMovie","title","setTitle","rating","setRating","e","target","value","_","data","movie","response","fetch","method","headers","body","JSON","stringify","ok","console","log"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,SAAtB,EAAiCC,MAAjC,EAAyCC,MAAzC,QAAsD,mBAAtD;AAEA,OAAO,MAAMC,SAAS,GAAIC,UAAD,IAAgB;AAAA,oBACXP,QAAQ,CAAC,EAAD,CADG;AAAA;AAAA,QAC9BQ,KAD8B;AAAA,QACvBC,QADuB;;AAAA,qBAETT,QAAQ,CAAC,CAAD,CAFC;AAAA;AAAA,QAE9BU,MAF8B;AAAA,QAEtBC,SAFsB;;AAIrC,SACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD;AACA,IAAA,WAAW,EAAC,aADZ;AAEA,IAAA,KAAK,EAAEH,KAFP;AAGA,IAAA,QAAQ,EAAEI,CAAC,IAAIH,QAAQ,CAACG,CAAC,CAACC,MAAF,CAASC,KAAV,CAHvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,EAQI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AACA,IAAA,IAAI,EAAC,MADL;AAEA,IAAA,KAAK,EAAEJ,MAFP;AAGA,IAAA,SAAS,EAAE,CAHX;AAIA,IAAA,MAAM,EAAE,CAACK,CAAD,EAAIC,IAAJ,KAAa;AACjBL,MAAAA,SAAS,CAACK,IAAI,CAACN,MAAN,CAAT;AACH,KAND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CARJ,EAkBI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAE,YAAY;AACzB,YAAMO,KAAK,GAAG;AAACT,QAAAA,KAAD;AAAQE,QAAAA;AAAR,OAAd;AACA,YAAMQ,QAAQ,GAAG,MAAMC,KAAK,CAAC,YAAD,EAAe;AACvCC,QAAAA,MAAM,EAAE,MAD+B;AAEvCC,QAAAA,OAAO,EAAE;AACL,0BAAgB;AADX,SAF8B;AAKvCC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeP,KAAf;AALiC,OAAf,CAA5B;;AAQA,UAAIC,QAAQ,CAACO,EAAb,EAAgB;AACZC,QAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACApB,QAAAA,UAAU,CAACU,KAAD,CAAV;AACH;AACJ,KAdD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,CAlBJ,CADJ;AAsCH,CA1CM","sourcesContent":["import React, {useState} from \"react\";\nimport { Form, Input, FormField, Rating, Button} from \"semantic-ui-react\";\n\nexport const MovieForm = (onNewMovie) => {\n    const [title, setTitle] = useState('');\n    const [rating, setRating] = useState(1);\n\n    return (\n        <Form>\n            <FormField>\n                <Input \n                placeholder=\"Movie title\" \n                value={title} \n                onChange={e => setTitle(e.target.value)}/>\n            </FormField>\n\n            <FormField>\n                <Rating \n                icon='star' \n                value={rating}\n                maxRating={5}\n                onRate={(_, data) => {\n                    setRating(data.rating)\n                }}/>\n            </FormField>\n\n            <FormField>\n                <Button onClick={async () => {\n                    const movie = {title, rating}\n                    const response = await fetch('/add_movie', {\n                        method: 'POST',\n                        headers: {\n                            'Content-Type': 'application/json'\n                        },\n                        body: JSON.stringify(movie)\n                    });\n\n                    if (response.ok){\n                        console.log(\"worked\");\n                        onNewMovie(movie);\n                    }\n                }}>submit</Button> \n            </FormField>\n        </Form>\n    );\n};"]},"metadata":{},"sourceType":"module"}